{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "Defines an AWS Step Functions state machine, together with the Lambda functions used as tasks when the state machine runs. See state-machine.json for the actual machine definition.",

    "Parameters": {
        "PhotoRepoS3Bucket": {
            "Type" : "String",
            "Description": "s3 bucket for photo uploads",
            "Default" : "photo-sharee7fa5f1b25be4c63a81417becda53512182406-devf"
        },
        "GraphQLFullEndPoint": {
            "Type" : "String",
            "Description": "graph QL endpoint",
            "Default" : "https://v35urcizvvaapoe6uumkqjz5em.appsync-api.us-east-1.amazonaws.com/graphql"
        },
        "GraphQLAPIId": {
            "Type" : "String",
            "Description": "graph QL API ID",
            "Default" : ""
        },
        "Stage": {
            "Type" : "String",
            "Description": "Environment stage or git branch",
            "Default" : "Development"
        }
    },

    "Resources": {
        "TransformMetadataFunction": {
            "Type": "AWS::Lambda::Function",
            "Description" : "massages JSON of extracted image metadata",
            "Properties": {
                "PackageType": "Image",
                "Role": { "Fn::GetAtt": ["LambdaRole", "Arn"] },
                "ImageConfig": { "Command": [ "transform-metadata::transform_metadata.Function::FunctionHandler" ]},
                "MemorySize": 256,
                "Timeout": 60,
                "Code": {
                    "ImageUri": "./transform-metadata",
                },
            },
            "Metadata": {
                "Dockerfile": "Dockerfile",
                "DockerContext": ".",
                "DockerTag": ""
            }
        },
        "ExtractImageMetadataFunction": {
            "Type": "AWS::Lambda::Function",
            "Description" : "Extract image metadata such as format, size, geolocation, etc.",
            "Properties": {
                "PackageType": "Image",
                "ImageConfig": { "Command": [ "extract-image-metadata::extract_image_metadata.Function::FunctionHandler" ]},
                "Role": { "Fn::GetAtt": ["LambdaRole", "Arn"] },
                "MemorySize": 1024,
                "Timeout": 200,
                "Code": {
                    "ImageUri": "./extract-image-metadata"
                }
            },
            "Metadata": {
                "Dockerfile": "Dockerfile",
                "DockerContext": ".",
                "DockerTag": ""
            }
        },
        "StoreImageMetadataFunction": {
            "Type": "AWS::Lambda::Function",
            "Description" : "Store image metadata into database",
            "Properties": {
                "PackageType": "Image",
                "ImageConfig": { "Command": [ "store-image-metadata::store_image_metadata.Function::FunctionHandler" ]},
                "Role": { "Fn::GetAtt": ["StoreMetaDataFunctionRole", "Arn"] },
                "MemorySize": 512,
                "Code": {
                    "ImageUri": "./store-image-metadata"
                },
                "Environment": {
                    "Variables": {
                        "GraphQLEndPoint": {"Ref": "GraphQLFullEndPoint"}
                    }
                }
            },
            "Metadata": {
                "Dockerfile": "Dockerfile",
                "DockerContext": ".",
                "DockerTag": ""
            }
        },
        "RekognitionFunction": {
            "Type": "AWS::Lambda::Function",
            "Description" : "Use Amazon Rekognition to detect labels from image",
            "Properties": {
                "PackageType": "Image",
                "ImageConfig": { "Command": [ "rekognition::rekognition.Function::FunctionHandler" ]},
                "Role": { "Fn::GetAtt": ["RekognitionFunctionRole", "Arn"] },
                "MemorySize": 256,
                "Code": {
                    "ImageUri": "./rekognition"
                }
            },
            "Metadata": {
                "Dockerfile": "Dockerfile",
                "DockerContext": ".",
                "DockerTag": ""
            }
        },
        "GenerateThumbnailFunction": {
            "Type": "AWS::Lambda::Function",
            "Description" : "Generate thumbnails for images",
            "Properties": {
                "PackageType": "Image",
                "ImageConfig": { "Command": [ "thumbnail::thumbnail.Function::FunctionHandler" ]},
                "Role": { "Fn::GetAtt": ["LambdaRole", "Arn"] },
                "MemorySize": 1536,
                "Timeout": 300,
                 "Code": {
                    "ImageUri": "./thumbnail"
                }
            },
            "Metadata": {
                "Dockerfile": "Dockerfile",
                "DockerContext": ".",
                "DockerTag": ""
            }
        },
        
        "StateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Description" : "",
            "Properties": {
                "RoleArn": {
                    "Fn::GetAtt": [
                        "StateMachineRole",
                        "Arn"
                    ]
                },
                "DefinitionString": {
                    "Fn::Sub": ""
                },
                "StateMachineName":"PhotoProcessingWorkflow-dotnet"

            }
        },

        "RekognitionFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Description" : "",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "StepFunctionLambdaInvoke",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:ListBucket",
                                        "s3:GetBucketLocation",
                                        "s3:GetObjectVersion",
                                        "s3:GetLifecycleConfiguration",
                                        "rekognition:DetectFaces",
                                        "rekognition:DetectLabels",
                                        "rekognition:DetectModerationLabels",
                                        "rekognition:DetectText"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },

        "StoreMetaDataFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Description" : "",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "StepFunctionLambdaInvoke",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "appsync:GraphQL",
                                        "sts:*"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },

        "LambdaRole": {
            "Type": "AWS::IAM::Role",
            "Description" : "",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
                ]
            }
        },

        "StateMachineRole": {
            "Type": "AWS::IAM::Role",
            "Description" : "",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": {
                                    "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                                }
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "StepFunctionLambdaInvoke",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
    }
}